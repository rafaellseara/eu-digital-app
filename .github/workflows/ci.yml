name: CI Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: 1234
          MONGO_INITDB_DATABASE: eu_digital
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      - name: ⬇️ Checkout do código
        uses: actions/checkout@v4

      - name: 🐳 Instalar Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: ⚙️ Build dos containers
        run: docker-compose build

      - name: 🚀 Subir serviços
        run: docker-compose up -d

      - name: 🕒 Esperar pelo backend
        run: |
          echo "A aguardar que o backend esteja pronto..."
          sleep 15
          curl -f http://localhost:3000/api/docs || exit 1

      - name: 📦 Testar frontend
        run: curl -f http://localhost:3001 || echo "Frontend respondeu (mesmo que vazio)"

      - name: ✅ Verificar containers ativos
        run: docker ps -a

      - name: 🧹 Limpar
        if: always()
        run: docker-compose down
  
  deploy:
    name: 📦 Deploy para Docker Hub
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: 🔑 Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🐳 Build e push da imagem do backend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/eu-digital-backend ./api
          docker push ${{ secrets.DOCKER_USERNAME }}/eu-digital-backend

      - name: 🐳 Build e push da imagem do frontend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/eu-digital-frontend ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/eu-digital-frontend
